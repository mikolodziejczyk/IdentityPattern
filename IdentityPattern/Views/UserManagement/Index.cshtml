@model IdentityPattern.Models.UserManagement.UserListVM
@using User.Repository;

@{
    if (!Model.IsDisabled.HasValue && !Model.IsApproved.HasValue)
    {
        ViewBag.Title = "Wszyscy użytkownicy";
    }
    else
    {
        if (Model.IsApproved.HasValue && Model.IsApproved == false)
        {
            ViewBag.Title = "Użytkownicy do akceptacji";
        }
        else
        {
            if (!Model.IsApproved.HasValue || (Model.IsApproved.HasValue && Model.IsApproved == true))
            {
                if (!Model.IsDisabled.HasValue || (Model.IsDisabled.HasValue && Model.IsDisabled == false))
                {
                    ViewBag.Title = "Aktywni użytkownicy";
                }
                else
                {
                    ViewBag.Title = "Użytkownicy zablokowani";
                }
            }
        }
    }
}

@section PageHeader
{
    <div class="page-header">
        <h1>@ViewBag.Title</h1>
    </div>
}

<form class="-mko-actions-form form-inline" method="post">
    <a class="btn btn-success" href="@Url.Action("NewAdmin")"><span class="glyphicon glyphicon-plus-sign"></span>&nbsp;Nowy administrator</a>
    @{Html.RenderPartial("Search/_ActionsFormSearchArea", new ViewDataDictionary() { });}
</form>

@{
    var grid = new WebGrid(null, rowsPerPage: Model.PageSize, defaultSort: "EMail");
    grid.Bind(Model.Users, rowCount: Model.TotalRows, autoSortAndPage: false);
}

@grid.GetHtml(
        columns: grid.Columns(
        grid.Column("Email", "E-mail", @<text><a href="@Url.Action("Details", new { id = item.Id })">@(item.Email ?? item.UserName)</a></text>, canSort: true),
                                grid.Column("CompanyDaxCode", "Kod DAX", @<text>@item.CompanyDaxCode</text>, canSort: true),
                                                        grid.Column("IsApproved", "Zaakceptowany", @<text>@FormatHelpers.BooleanValueString(item.IsApproved, "<span class='text-success'>Tak</span>|<span class='text-danger'>Nie</span>")</text>, canSort: false),
                                                                                grid.Column("IsDisabled", "Zablokowany", @<text>@FormatHelpers.BooleanValueString(item.IsDisabled, "<span class='text-danger'>Tak</span>|<span class='text-success'>Nie</span>")</text>, canSort: false),
                                                                                                    grid.Column("RoleNames", "Role", @<text>@ApplicationUserExtensions.GetCombinedDisplayRoleNames(item.Value)</text>, canSort: false)),
                                                                                 numericLinksCount: 10, tableStyle: "table table-hover table-striped webgrid", htmlAttributes: new { id = "connectionListTable" })


